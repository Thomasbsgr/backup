PROMPT='%~$'

# changement d'appel pour pip3 et python3
alias py="python3.13"
alias pip="pip3"

# Editeur par défaut vscode
export EDITOR="code"

# zsh
alias zshup="source ~/.zshrc"

# cd les plus utiles
alias doc="cd /Users/thomas/Documents/"
alias desk="cd /Users/thomas/Desktop"
alias user="cd /Users/thomas"

alias pyc="cd /Users/thomas/Documents/pythonProject/coursPython"
alias pyp="cd /Users/thomas/Documents/pythonProject"

alias corse="cd /Users/thomas/Documents/web/corse"

# Django
alias run="py manage.py runserver"
alias man="py manage.py"

# Venv
alias venv="source venv/bin/activate"
alias stop="deactivate"

# Odoo
alias odoo="cd /Users/thomas/Documents/odoo"

# Sass
alias sass="npm run sass"

# Encryptage
enc() {
  if [[ "$1" == "code" ]]; then
    if [ ! -f "backup.zip" ]; then
      echo "Fichier introuvable."
      return 1
    fi
    openssl enc -aes-256-cbc -salt -in "backup.zip" -out "papamaman.enc"
  else
    echo -n "Nom du fichier à chiffrer : "
    read file
    if [ ! -f "$file" ]; then
      echo "Fichier introuvable."
      return 1
    fi
    openssl enc -aes-256-cbc -salt -in "$file" -out "$file.enc"
  fi
}

denc() {
  if [[ "$1" == "code" ]]; then
    if [ ! -f "papamaman.enc" ]; then
      echo "Fichier introuvable."
      return 1
    fi
    openssl enc -d -aes-256-cbc -in "papamaman.enc" -out "backup.zip"
  else
    echo -n "Nom du fichier chiffré (.enc) : "
    read file
    if [ ! -f "$file" ]; then
      echo "Fichier introuvable."
      return 1
    fi
    openssl enc -d -aes-256-cbc -in "$file" -out "$file.zip"
  fi
}

# Modif du dock
dock_speed() {
  if [[ "$1" == "on" ]]; then
    echo "🔧 Activation du Dock rapide..."
    defaults write com.apple.dock autohide-delay -float 0
    defaults write com.apple.dock autohide-time-modifier -float 0.4
    killall Dock
    echo "✅ Dock rapide activé."
  elif [[ "$1" == "off" ]]; then
    echo "♻️ Réinitialisation des réglages du Dock..."
    defaults delete com.apple.dock autohide-delay 2>/dev/null
    defaults delete com.apple.dock autohide-time-modifier 2>/dev/null
    killall Dock
    echo "✅ Réglages du Dock réinitialisés."
  else
    echo "❗ Utilisation : dock_speed on | off"
  fi
}

# Fonction backup fichier important
backup() {
  cd /Users/thomas/.backup_git || return

  # Nettoyer le dossier util
  rm -rf util
  mkdir -p util/{zsh,git,espanso,brew,vscode,ssh}

  #### ZSH
  cp ~/.zshrc util/zsh/zshrc
  [ -f ~/.zprofile ] && cp ~/.zprofile util/zsh/zprofile
  [ -f ~/.aliases ] && cp ~/.aliases util/zsh/aliases
  echo "✅ Zsh sauvegardé"
  read -n 1

  #### GIT
  [ -f ~/.gitconfig ] && cp ~/.gitconfig util/git/gitconfig
  [ -f ~/.gitignore_global ] && cp ~/.gitignore_global util/git/gitignore_global
  echo "✅ Git sauvegardé"
  read -n 1

  #### ESPANSO
  cp "/Users/thomas/Library/Application Support/espanso/match/base.yml" util/espanso/base.yml
  # ou tout le dossier :
  # cp -R "/Users/thomas/Library/Application Support/espanso" util/espanso/
  echo "✅ Espanso sauvegardé"
  read -n 1

  #### HOMEBREW
  brew bundle dump --describe --file=util/brew/Brewfile --force
  brew list > util/brew/brew_list.txt
  brew list --cask > util/brew/brew_cask_list.txt
  echo "✅ Brew sauvegardé"
  read -n 1

  #### VS CODE
  CODE_SETTINGS="$HOME/Library/Application Support/Code/User/settings.json"
  CODE_KEYS="$HOME/Library/Application Support/Code/User/keybindings.json"
  [ -f "$CODE_SETTINGS" ] && cp "$CODE_SETTINGS" util/vscode/settings.json
  [ -f "$CODE_KEYS" ] && cp "$CODE_KEYS" util/vscode/keybindings.json
  echo "✅ VS Code sauvegardé"
  read -n 1

  #### SSH (⚠️ uniquement les fichiers publics + config)
  [ -f ~/.ssh/config ] && cp ~/.ssh/config util/ssh/
  cp ~/.ssh/*.pub util/ssh/ 2>/dev/null
  echo "✅ SSH sauvegardé (clés publiques + config)"
  read -n 1

  #### Commit Git
  git add .
  git diff --cached --quiet || git commit -m "backup"
  git push
  echo "✅ GitHub mis à jour"
  read -n 1

  echo -e "\n✅ Backup complet terminé avec succès !"
}
